---
title: "HEAL Parks 2022 Conversion"
author: "Ronald Buie"
date-modified: "`r Sys.Date()`"

format: 
  pdf:
    toc: true
    number-sections: true
    df-print: kable
    fig-height: 12
    fig-width: 16
execute: 
  echo: false
  warning: false
  output: false
---

# Front Matter

This document outlines procedures and technical details for the integration of data from 2022 HEAL Parks studies to align with 2023 and onward data. The code contained in this script reads prepared data and reformats it to the 2023 standard.

For general information about the project please review the [git](https://github.com/PHSKC-APDE/HEAL_Parks_Analysis) or contact [Seth Schromen-Wawrin](seth.schromen-wawrin@kingcounty.gov) or [Ronald Buie](rbuie@kingcounty.gov)

# Preparing 2022 Data

2022 data were provided via email by Seth. APDE stores a copy of these and all data in the [DPH -APDEWork:ParkOBservationStudies library/2022 Annual Study/inputs](https://kc1.sharepoint.com/teams/DPH-APDEWork/ParkObservationStudies/Forms/AllItems.aspx)

In order to run this script, you should copy the 2022 Annual Study/inputs folder into the 2022 folder of the HEAL_Parks_Analysis repository, and run this quarto file.

```{r check for data}
library(here)
if(!dir.exists(here("./2022/inputs"))) {
  stop("data not staged, please prepare data as instructred, or reach out to Ronald Buie for help.")
}
```

# Load available 2022 data

timestamps are not uniform across files. currently ignoring these to work on aligning other data.

```{r}
library(readxl)
library(data.table)
for(file in dir(here("./2022/inputs"), include.dirs = T, full.names = T)) {
  message(paste("processing", file))
  for(sheet in excel_sheets(file)) {
    if(endsWith(sheet, "2022")){

      message(paste("adding sheet:", sheet))
      OldSheet <- as.data.table(read_xlsx(file, sheet = sheet))
    #  OldSheet$`Start Time` <- NA
      OldSheet[,"Start Time" := NULL]
      if(exists("OldDT")) {
        #check name matches before merging
        if(any(!(names(OldSheet) %in% names(OldDT)))){
          warning("missmatch names found attempting patch based on column order: \n")
          message(paste("the following columns will be renamed",list(names(OldSheet)[!(names(OldSheet) %in% names(OldDT))]),"\n"))
          message(paste("the new names will be",list(names(OldDT)[!(names(OldSheet) %in% names(OldDT))]), "\n"))
          names(OldSheet)[!(names(OldSheet) %in% names(OldDT))] <- names(OldDT)[!(names(OldSheet) %in% names(OldDT))]
        }
        OldDT <- rbind(OldDT, OldSheet)
      } else {
        OldDT <- OldSheet
      }
    } else {
            message(paste("skipping sheet:", sheet))
    }
  }
  

}



remove(OldSheet)
remove(file)
remove(sheet)
```

```{r cleaning varibales data}
# removing (too) empty observations
OldDT <- OldDT[!is.na(`Target #`),]


# many park names need to be corrected and cleaned
OldDT[Park == "Brighten Playfield ​",]$Park <- "Brighton Playfield"
OldDT[Park == "Cascade View Community Park ​" | Park == "Cascade View",]$Park <- "Cascade View Community Park"
OldDT[Park == "Marra Desimone Park ​",]$Park <- "Marra Desimone Park"
OldDT[Park == "Midway Park ​",]$Park <-  "Midway Park"
OldDT[Park == "Moshier Park ​",]$Park <- "Moshier Memorial Park"
OldDT[Park == "Puget Sound Park  ​",]$Park <- "Puget Sound Park"
OldDT[Park == "Roxhill Park ​",]$Park <- "Roxhill Park"
OldDT[Park == "Steel Lake Park (south) ​",]$Park <- "Steel Lake Park"
OldDT[Park == "Steve Cox Memorial Park ​",]$Park <- "Steve Cox Playfield"
OldDT[Park == "Tukwila Community Center ​" | Park == "Tukwilla Community C",]$Park <- "Tukwila Community Center"


# add ID
OldDT$record_id <- 1:nrow(OldDT)

```

# Create 2022 SOPARCActivities.csv

```{r process SOPARCActivities}

newActivitiesCols <- c("record_id",	"record_id_aggregated",	"activity",	"children",	"teen",	"adult",	"senior")

```

# Create 2022 SOPARCActivitiesExpanded.csv

```{r process SOPARCActivitiesExpanded}
c("record_id_aggregated",	"record_id", "activity",	"children",	"teen",	"adult",	"senior",	"park_name_full",	"period",	"target_area",	"datePOSIX")
```

# Create 2022 SOPARCAnalaysisSet

```{r}
ParkData <- read_xlsx(here("./2022/inputs/Parks_MASTER.xlsx"))

c("park_name_full",	"park_name",	"record_id",	"redcap_survey_identifier",	"park_scan_data_collection_timestamp",	"obs_initial",	"start_time",	"tar_area",	"sub_area",	"accessible",	"usable",	"lit",	"occupied",	"supervised",	"organized",	"equipped",	"num_child_prim",	"num_child_snd",	"num_child_spec",	"num_teen_prim",	"num_teen_snd",	"num_teen_spec",	"num_adult_prim",	"num_adult_snd",	"num_adult_spec",	"num_senior_prim",	"num_senior_snd",	"num_senior_spec",	"prim_act_name",	"prim_act_other",	"yesno_snd",	"snd_act_name",	"other_act_snd",	"yesno_spec",	"spec_act_name",	"other_act_spec",	"comments",	"park_scan_data_collection_complete",	"timestampPOSIX",	"datePOSIX",	"day",	"month",	"weekend",	"periodBasedOnSequence",	"dayNumberBasedOnSequence",	"period",	"Park", "Address",	"City",	"Zip",	"Neighborhood",	"Images",	"Tract",	"Latitude",	"Longitude",	"Equity Score Priority", 	"Planned park changes?",	"Notes",	"censusYear",	"populationHalfMile",	"studyStartDate",	"studyDescription",	"study_count")


# park_name_full



OldDT.ParkData <- merge(OldDT, ParkData, by.x = "Park", by.y = "Park Name", all.x = T)

park_name_full <- OldDT.ParkData$Park
park_name <- OldDT.ParkData$`REDCap Name`
record_id <- OldDT.ParkData$record_id
redcap_survey_identifier <- NA
park_scan_data_collection_timestamp <- 

OldDT.ParkData[rowSums(is.na(OldDT.ParkData)) != ncol(OldDT.ParkData),]
```
# Create 2022 SOPARCAnalysisSetAggregatedPeriods

```{r}
c("park_name_full",	"park_name",	"tar_area",	"dayNumberBasedOnSequence",	"period",	"datePOSIX",	"day",	"month",	"weekend",	"accessible",	"usable",	"lit",	"occupied",	"supervised",	"organized",	"equipped",	"num_child_prim",	"num_child_snd",	"num_child_spec",	"num_teen_prim",	"num_teen_snd",	"num_teen_spec",	"num_adult_prim",	"num_adult_snd",	"num_adult_spec",	"num_senior_prim",	"num_senior_snd",	"num_senior_spec",	"Park Address",	"City",	"Zip",	"Neighborhood",	"Images",	"Tract",	"Latitude",	"Longitude",	"Equity Score Priority", "Planned park changes?",	"Notes",	"censusYear",	"populationHalfMile",	"studyStartDate",	"studyDescription",	"study_count")
```