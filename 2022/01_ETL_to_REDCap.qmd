---
title: "HEAL Parks 2022 Conversion"
author: "Ronald Buie"
date-modified: "`r Sys.Date()`"

format: 
  pdf:
    toc: true
    number-sections: true
    df-print: kable
    fig-height: 12
    fig-width: 16
execute: 
  echo: false
  warning: false
  output: false
---

# Front Matter

This document outlines procedures and technical details for the integration of data from 2022 HEAL Parks studies to align with 2023 and onward data. The code contained in this script reads prepared data and reformats it to the 2023 standard.

For general information about the project please review the [git](https://github.com/PHSKC-APDE/HEAL_Parks_Analysis) or contact [Seth Schromen-Wawrin](seth.schromen-wawrin@kingcounty.gov) or [Ronald Buie](rbuie@kingcounty.gov)

# Preparing 2022 Data

2022 data were provided via email by Seth. APDE stores a copy of these and all data in the [DPH -APDEWork:ParkOBservationStudies library/2022 Annual Study/inputs](https://kc1.sharepoint.com/teams/DPH-APDEWork/ParkObservationStudies/Forms/AllItems.aspx)

In order to run this script, you should copy the 2022 Annual Study/inputs folder into the 2022 folder of the HEAL_Parks_Analysis repository, and run this quarto file.

```{r check for data}
library(here)
if(!dir.exists(here("./2022/inputs"))) {
  stop("data not staged, please prepare data as instructred, or reach out to Ronald Buie for help.")
}
```

# Load available 2022 data

timestamps are not uniform across files. currently ignoring these to work on aligning other data.

```{r}
library(readxl)
library(data.table)
for(file in dir(here("./2022/inputs"), include.dirs = T, full.names = T)) {
  message(paste("processing", file))
  for(sheet in excel_sheets(file)) {
    if(endsWith(sheet, "2022")){

      message(paste("adding sheet:", sheet))
      OldSheet <- as.data.table(read_xlsx(file, sheet = sheet))
      OldSheet[,"Start Time":= NULL]
      if(exists("OldDT")) {
        #check name matches before merging
        if(any(!(names(OldSheet) %in% names(OldDT)))){
          warning("missmatch names found attempting patch based on column order: \n")
          message(paste("the following columns will be renamed",list(names(OldSheet)[!(names(OldSheet) %in% names(OldDT))]),"\n"))
          message(paste("the new names will be",list(names(OldDT)[!(names(OldSheet) %in% names(OldDT))]), "\n"))
          names(OldSheet)[!(names(OldSheet) %in% names(OldDT))] <- names(OldDT)[!(names(OldSheet) %in% names(OldDT))]
        }
        OldDT <- rbind(OldDT, OldSheet)
      } else {
        OldDT <- OldSheet
      }
    } else {
            message(paste("skipping sheet:", sheet))
    }
  }
  

}
```